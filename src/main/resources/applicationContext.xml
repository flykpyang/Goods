<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--扫描注解包 配置这条便可移除 <context:annotation-config/> -->
    <!--<context:component-scan base-package="com.goods.cn" />-->

    <context:annotation-config/>
    <!--配置文件加载 init.properties-->
    <bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:jdbc.properties"/>
    </bean>
    <!-- 使用Tomcat JDBC连接(池) -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="filters" value="stat" />
        <property name="maxActive" value="20" />
        <property name="initialSize" value="1" />
        <property name="maxWait" value="60000" />
        <property name="minIdle" value="1" />
        <property name="timeBetweenEvictionRunsMillis" value="3000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
        <!-- 超过时间限制是否回收 -->
        <property name="removeAbandoned" value="true" />
        <!-- 超时时间；单位为秒。180秒=3分钟 -->
        <property name="removeAbandonedTimeout" value="180" />
        <!-- 关闭abanded连接时输出错误日志  排查的时候打开-->
        <!--<property name="logAbandoned" value="true" />-->
    </bean>

    <!-- 创建SessionFactory对象 -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <!-- 加载连接池 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 配置参数值x -->
        <property name="hibernateProperties">
            <props>
                <!-- 配置方言 服务器版本-->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!-- 控制台输出 -->
                <!--<prop key="hibernate.show_sql">true</prop>-->
                <prop key="hibernate.jdbc.batch_size">100</prop>
                <prop key="hibernate.jdbc.use_get_generated_keys">false</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://120.25.164.168:3306</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
                <prop key="hbm2ddl.auto">update</prop>

                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <!-- 高速缓存提供程序 -->
                <prop key="hibernate.cache.region.factory_class">
                    net.sf.ehcache.hibernate.EhCacheRegionFactory
                </prop>
                <!-- 格式化SQL -->
                <prop key="hibernate.format_sql">true</prop>
                <!-- 开启查询缓存 -->
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <!--//开启二级缓存-->
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <!--缓存配置文件-->
                <prop key="hibernate.cache.provider_configuration_file_resource_path">WEB-INF/classes/ehcache.xml</prop>
            </props>
        </property>
        <!-- 读取 com/springtest/cn/po 下的所有的  hbm.xml 文件，不用每个文件都写了 -->
        <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
    </bean>

    <!-- 事务管理器配置,单数据源事务 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- 配置事务特性 -->
    <tx:advice id="txActive" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" propagation="REQUIRED"/>
            <tx:method name="query*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="REQUIRED"/>
            <tx:method name="adjust*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="loan*" propagation="REQUIRED"/>
            <tx:method name="push*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut expression="execution(* com.goods.cn.service.*.*(..))" id="myPoint"/>
        <aop:advisor advice-ref="txActive" pointcut-ref="myPoint"/>
    </aop:config>

    <!-- 配置job事务特性 -->
    <tx:advice id="txActiveJob" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="project*" propagation="REQUIRED"/>
            <tx:method name="push*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut expression="execution(* com.goods.cn.job..*.*(..))" id="myJob"/>
        <aop:advisor advice-ref="txActiveJob" pointcut-ref="myJob"/>
    </aop:config>

</beans>
